public class Calendar {
    public static void main(String[] args) {
            int days = 30;
            int firstSundayInTheMonth = 6;

            printCalendarBorder (days, firstSundayInTheMonth);
        }
    public static void printCalendarBorder(int days, int firstSundayInTheMonth) {
        System.out.println(" Sun     Mon     Tue    Wed   Thu    Fri    Sat");
        System.out.println("+------+------+------+------+------+------+------+");

        int FirstDayOfMonth = 1;
        int Weekday = firstSundayInTheMonth;
        
        /* NOT MY CODE AFTER WHILE WAS GIVEN IN COMP 170
        could not figure out how to place the numbers into the code */

        while (FirstDayOfMonth <= days) {
            for (int i = 1; i <= 7; i++) {
                System.out.print(padded(Weekday <= days ? Weekday : 0, 5));
                FirstDayOfMonth++;
                Weekday = (Weekday % 7) + 1; // Adjust dayOfWeek without if statements
            }
            System.out.println();
        }

        System.out.println("+------+------+------+------+------+------+------+");
    }
    public static  String padded(int n, int width) {
        String s = "" + n;
        for (int i = s.length(); i < width; i++) {
            s = " " + s;
        }
        return s;
    }
    }




describe any red, yellow, or green level issues with your code. 
For red and yellow issues, discuss what led to them;

Yellow:
When it came to initializing the code for the first day of the month I was unable to figure it out what was going wrong.
I ended up using the code I was given when I took COMP 170 in the fall last year. 
Red: 
The code from "FirstDayofMonth" had issues with complying all of the numbers in the correct order. I kept getting a reversal of numbers
startings from 7 and ending with 1 for every row. 
Green:
The border of my calendar was established and was easily visualized. 

suggest how the code could be improved;
 - A way my code could be improved would be to curate more time and focus on it. I hadn't realized how difficult it was going to be
for myself to not use any IF statements. I didn't plan the code other priorly and it was definitely noticeable when it came to figuring 
out a code for the days of the week. 
reflect if the quality of your code is related to time management and how to mitigate things.
- The quality of my code was related to time management. I was working on it for some time and could not figure out how to initialize a
method for the days of the week. 
- I was struggling for a few hours and due to not having more spare time during the day I was unable to figure out
what else to add to my code. 
propose how Leo's code can be improved.
- I definitely believe that if statements would make the code less complicated. But, in order to follow the pledge we must stray away
from the if statements. 
